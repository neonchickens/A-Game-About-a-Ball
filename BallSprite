package com.example.workingwitheverything;

import android.content.Context;
import android.graphics.Color;
import android.graphics.Point;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;

public class Object_Wall {
	
	protected ImageView wall;
	
	private int xOffset = 5;
	private int yOffset = 65;
	
	private boolean blnCollide = false;
	
	protected int sectorOfCollision = 0;
	
	public Object_Wall(int xLoc, int yLoc, int xSize, int ySize, RelativeLayout rLayout, Context context) {
		
		wall = new ImageView(context);
		
		ViewGroup.LayoutParams tempParam = new ViewGroup.LayoutParams(xSize, ySize);
		wall.setLayoutParams(tempParam); 
		
		rLayout.addView(wall);
		
		wall.setX(xLoc + xOffset);
		wall.setY(yLoc + yOffset);
		wall.setBackgroundColor(Color.rgb(250, 175, 75));

	}
	
	public boolean isCollisionWall(Point ball, int radius, int xMove, int yMove) {

			if (ball.y <= wall.getY() && ball.x <= wall.getX() && Math.sqrt(Math.pow(wall.getY() - (ball.y), 2) + Math.pow(wall.getX() - (ball.x), 2)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 1;
				}
				blnCollide = true;
				
			} else if (ball.y <= wall.getY() && ball.x >= wall.getX() && ball.x <= (wall.getX() + wall.getWidth()) && Math.abs(wall.getY() - (ball.y)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 2;
				}
				blnCollide = true;
				
			} else if (ball.y <= wall.getY() && ball.x >= (wall.getX() + wall.getWidth()) && Math.sqrt(Math.pow(wall.getY() - (ball.y), 2) + Math.pow((wall.getX() + wall.getWidth()) - (ball.x), 2)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 3;
				}
				blnCollide = true;
				
			} else if (ball.y >= wall.getY() && ball.y <= (wall.getY() + wall.getHeight()) && ball.x >= (wall.getX() + wall.getWidth()) && Math.abs((wall.getX() + wall.getWidth()) - (ball.x)) <= radius) { 
				
				if (blnCollide) {
					sectorOfCollision = 4;
				}
				blnCollide = true;
				
			} else if (ball.y >= (wall.getY() + wall.getHeight()) && ball.x >= (wall.getX() + wall.getWidth()) && Math.sqrt(Math.pow((wall.getY() + wall.getHeight()) - (ball.y), 2) + Math.pow((wall.getX() + wall.getWidth()) - (ball.x), 2)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 5;
				}
				blnCollide = true;
				
			} else if (ball.y >= (wall.getY() + wall.getHeight()) && ball.x >= wall.getX() && ball.x <= (wall.getX() + wall.getWidth()) && Math.abs((wall.getY() + wall.getHeight()) - (ball.y)) <= radius) { 
				
				if (blnCollide) {
					sectorOfCollision = 6;
				}
				blnCollide = true;
				
			} else if (ball.y >= (wall.getY() + wall.getHeight()) && ball.x <= wall.getX() && Math.sqrt(Math.pow((wall.getY() + wall.getHeight()) - (ball.y), 2) + Math.pow(wall.getX() - (ball.x), 2)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 7;
				}
				blnCollide = true;
				
			} else if (ball.y >= wall.getY() && ball.y <= (wall.getY() + wall.getHeight()) && ball.x <= wall.getX() && Math.abs(wall.getX() - (ball.x)) <= radius) {
				
				if (blnCollide) {
					sectorOfCollision = 8;
				}
				blnCollide = true;
				
			} else {
				
				blnCollide = false;
				
			}
			
			return (blnCollide);
		}
	public boolean getColliding() {
		return blnCollide;
	}
	public int getCollisionSector() {
		return sectorOfCollision;
	}
	
	public double getNewSlope(Point ball, int xMove, int yMove) {
		
		double refinedSlope = 0;
		
			if (ball.x - (wall.getX() + wall.getWidth()) != 0 && xMove != 0) {
				refinedSlope = ((yMove / xMove) - (2 * ((ball.y - (wall.getY() + wall.getHeight())) / (ball.x - (wall.getX() + wall.getWidth()))))) / 2;
			}
			
			sectorOfCollision = 0;
			
		return refinedSlope;
	}
	
	public double getTransfer(Point ball) {
		
		double dblRefinedSlope;
		
		dblRefinedSlope = 1 / ((ball.y - (wall.getY() + wall.getHeight())) / (ball.x - (wall.getX() + wall.getWidth())));
		
		return dblRefinedSlope;
	}
	
	public void resetSector() {
		sectorOfCollision = 0;
	}

}
