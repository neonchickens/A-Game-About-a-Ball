package com.example.workingwitheverything;

import android.content.Context;
import android.graphics.Color;
import android.graphics.Point;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;

public class Object_Wall {
	
	protected ImageView wall;
	
	private int xOffset = 5;
	private int yOffset = 65;
	
	protected int sectorOfCollision = 0;
	
	public Object_Wall(int xLoc, int yLoc, int xSize, int ySize, RelativeLayout rLayout, Context context) {
		
		wall = new ImageView(context);
		
		ViewGroup.LayoutParams tempParam = new ViewGroup.LayoutParams(xSize, ySize);
		wall.setLayoutParams(tempParam); 
		
		rLayout.addView(wall);
		
		wall.setX(xLoc + xOffset);
		wall.setY(yLoc + yOffset);
		wall.setBackgroundColor(Color.rgb(255, 102, 0));

	}
	
	public boolean isCollisionWall(Point ball, int radius, int xMove, int yMove) {
		
		boolean collide = false;
		int hypotenuse = 0;
		
		if (xMove == 0) {
			hypotenuse = yMove;
		} else {
			hypotenuse = yMove / xMove;
		}

			if (ball.y > wall.getY() && ball.x > wall.getX() && Math.sqrt(Math.pow(wall.getY() - (ball.y), 2) + Math.pow(wall.getX() - (ball.x), 2)) < radius) {
				
				sectorOfCollision = 1;
				collide = true;
				
			} else if (ball.y < wall.getY() && ball.x > wall.getX() && ball.x < (wall.getX() + wall.getWidth()) && Math.abs(wall.getY() - (ball.y)) < Math.abs(yMove)) {
				
				sectorOfCollision = 2;
				collide = true;
				
			} else if (ball.y > wall.getY() && ball.x > (wall.getX() + wall.getWidth()) && Math.sqrt(Math.pow(wall.getY() - (ball.y), 2) + Math.pow((wall.getX() + wall.getWidth()) - (ball.x), 2)) < radius) {
				
				sectorOfCollision = 3;
				collide = true;
				
			} else if (ball.y > wall.getY() && ball.y < (wall.getY() + wall.getHeight()) && ball.x > (wall.getX() + wall.getWidth()) && Math.abs((wall.getX() + wall.getWidth()) - (ball.x)) < Math.abs(xMove)) { 
				
				sectorOfCollision = 4;
				collide = true;
				
			} else if (ball.y > (wall.getY() + wall.getHeight()) && ball.x > (wall.getX() + wall.getWidth()) && Math.sqrt(Math.pow((wall.getY() + wall.getHeight()) - (ball.y), 2) + Math.pow((wall.getX() + wall.getWidth()) - (ball.x), 2)) < radius) {
				
				sectorOfCollision = 5;
				collide = true;
				
			} else if (ball.y > (wall.getY() + wall.getHeight()) && ball.x > wall.getX() && ball.x < (wall.getX() + wall.getWidth()) && Math.abs((wall.getY() + wall.getHeight()) - (ball.y)) < Math.abs(yMove)) { 
				
				sectorOfCollision = 6;
				collide = true;
				
			} else if (ball.y > (wall.getY() + wall.getHeight()) && ball.x < wall.getX() && Math.sqrt(Math.pow((wall.getY() + wall.getHeight()) - (ball.y), 2) + Math.pow(wall.getX() - (ball.x), 2)) < radius) {
				
				sectorOfCollision = 7;
				collide = true;
				
			} else if (ball.y > wall.getY() && ball.y < (wall.getY() + wall.getHeight()) && ball.x < wall.getX() && Math.abs(wall.getX() - (ball.x)) < Math.abs(xMove)) {
				
				sectorOfCollision = 8;
				collide = true;
				
			}
			
			return (collide);
		}
	
	public int getCollisionSector() {
		return sectorOfCollision;
	}
	
	public void resetSector() {
		sectorOfCollision = 0;
	}

}
